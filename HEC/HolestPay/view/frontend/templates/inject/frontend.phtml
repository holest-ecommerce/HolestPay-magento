<?php
// Get order ID and customer email context data
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
/** @var \Magento\Checkout\Model\Session $checkoutSession */
$checkoutSession = $objectManager->get(\Magento\Checkout\Model\Session::class);
$incrementId = $checkoutSession->getLastRealOrderId();
$orderId = null;
if ($incrementId) {
    $order = $objectManager->create(\Magento\Sales\Model\Order::class)->loadByIncrementId($incrementId);
    if ($order && $order->getId()) {
        $orderId = (int)$order->getId();
    }
}
/** @var \Magento\Customer\Model\Session $customerSession */
$customerSession = $objectManager->get(\Magento\Customer\Model\Session::class);
$customerEmail = $customerSession->isLoggedIn() ? (string)$customerSession->getCustomer()->getEmail() : null;
?>

<div id="holestpay-frontend-area" style="display:none"></div>
<!-- Add custom frontend script here if needed. HolestPayCheckout is available globally. -->
<script nonce="<?= $block->getNonce() ?>">
require(['jquery'], function ($) {
    $(function () {
        try {
            // Set context data directly from PHP variables
            window.HolestPayCheckout = window.HolestPayCheckout || {};
            window.HolestPayCheckout.context = Object.assign({ 
                orderId: null, 
                customerEmail: null 
            }, window.HolestPayCheckout.context || {}, {
                orderId: <?= $orderId ? (int)$orderId : 'null' ?>,
                customerEmail: <?= $customerEmail ? ('"' . $block->escapeHtml($customerEmail) . '"') : 'null' ?>
            });
            

            // Add all required properties
            window.HolestPayCheckout = window.HolestPayCheckout || {};
            
            // Get checkout context data from child block
            var checkoutContextBlock = <?= json_encode($block->getChildBlock('holestpay.checkout.context')) ?>;
            
            
            // POS configuration based on current environment
            window.HolestPayCheckout.POS = <?= json_encode($block->getChildBlock('holestpay.checkout.context')->getPosConfiguration()) ?>;
            window.HolestPayCheckout.environment = '';
            window.HolestPayCheckout.merchant_site_uid = '';
            window.HolestPayCheckout.insert_footer_logotypes = <?= json_encode($block->getChildBlock('holestpay.checkout.context')->getInsertFooterLogotypes()) ?>;
            
            if(window.HolestPayCheckout.POS){
                window.HolestPayCheckout.environment = window.HolestPayCheckout.POS.Environment;
                window.HolestPayCheckout.merchant_site_uid = window.HolestPayCheckout.POS.MerchantsiteUid;
            }
            
            // Site base URL
            window.HolestPayCheckout.site_base_url = <?= json_encode($block->getChildBlock('holestpay.checkout.context')->getSiteBaseUrl()) ?>;
            
            // Current language
            window.HolestPayCheckout.lang = <?= json_encode($block->getChildBlock('holestpay.checkout.context')->getCurrentLanguage()) ?> || 'en';
            window.HolestPayCheckout.hpaylang = window.HolestPayCheckout.lang.substring(0,2).replace('sr', 'rs');

            // Cart data
            window.HolestPayCheckout.cart = <?= json_encode($block->getChildBlock('holestpay.checkout.context')->getCartData()) ?>;
            
            // HolestPay URL based on environment
            window.HolestPayCheckout.hpay_url = <?= json_encode($block->getChildBlock('holestpay.checkout.context')->getHolestPayUrl()) ?>;
            
            // Translated labels
            window.HolestPayCheckout.labels = <?= json_encode($block->getChildBlock('holestpay.checkout.context')->getLabels()) ?>;

            if(window.HolestPayCheckout.init){
                window.HolestPayCheckout.init();
            }

            if(window.checkoutConfig && window.checkoutConfig.payment)
				window.checkoutConfig.payment.holestpay = window.HolestPayCheckout.POS;
            

        } catch (e) { 
            console.error('HolestPayCheckout initialization error:', e);
        }
    });
});
</script>

<?php
// Render custom CSS if configured
$customCss = $block->getChildBlock('holestpay.checkout.context')->getCustomFrontendCss();
if (!empty($customCss)): ?>
<style nonce="<?= $block->getNonce() ?>">
<?= /* @noEscape */ $customCss ?>
</style>
<?php endif; ?>

<?php
// Render custom JS if configured
$customJs = $block->getChildBlock('holestpay.checkout.context')->getCustomFrontendJs();
if (!empty($customJs)): ?>
<script nonce="<?= $block->getNonce() ?>">
<?= /* @noEscape */ $customJs ?>
</script>
<?php endif; ?>


